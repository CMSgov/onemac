service: admin

frameworkVersion: "3"

useDotenv: true

package:
  individually: true

plugins:
  - serverless-esbuild
  - serverless-dotenv-plugin
  - serverless-s3-bucket-helper

custom:
  stage: ${opt:stage, 'dev'}  # Ensure the 'stage' is being passed correctly
  iamPermissionsBoundaryPolicy: ${ssm:/configuration/${self:custom.stage}/iam/permissionsBoundaryPolicy, ssm:/configuration/default/iam/permissionsBoundaryPolicy, ""}
  oneMacTableName: onemac-${self:custom.stage}-one

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: ${self:custom.stage}
  iam:
    role:
      path: ${ssm:/configuration/${self:custom.stage}/iam/path, ssm:/configuration/default/iam/path, "/"}
      permissionsBoundary: !Sub arn:aws:iam::${AWS::AccountId}:policy${self:custom.iamPermissionsBoundaryPolicy}
      statements:
        # Allow DynamoDB access (example permissions)
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:*:*:table/onemac-develop-one
            - arn:aws:dynamodb:*:*:table/${self:custom.oneMacTableName}
            - arn:aws:dynamodb:*:*:table/${self:custom.oneMacTableName}/index/*
        
        # Allow CreateRole and TagResource actions
        - Effect: Allow
          Action:
            - iam:CreateRole
            - iam:TagResource
            - iam:PassRole
          Resource: "*"

  environment:
    NODE_OPTIONS: '--enable-source-maps'
    oneMacTableName: ${self:custom.oneMacTableName}

  layers:
    - ${cf:aws-sdk-v2-layer-${self:custom.stage}.AwsSdkV2LambdaLayerQualifiedArn}

functions:
  addPropertyToJWT:
    handler: ./handlers/addPropertyToJWT.handler
    timeout: 360
    events:
      - cognitoUserPool:
          pool: ${self:custom.stage}-user-pool  # Ensure this resolves correctly
          trigger: PreTokenGeneration

  resetData:
    handler: ./handlers/resetData.main
    timeout: 360

  resetOneTable:
    handler: ./handlers/resetOneTable.main
    timeout: 180

  softDeleteComponent:
    handler: ./handlers/softDeleteComponent.main
    timeout: 180

  createOneMacPackage:
    handler: ./handlers/createOneMacPackage.main
    timeout: 180

  batchCreateOMP:
    handler: ./handlers/batchCreateOMP.main
    timeout: 180

  getPackageItems:
    handler: ./handlers/getPackageItems.main
    timeout: 180

  updatePackageId:
    handler: ./handlers/updatePackageId.main
    timeout: 180

  deleteZZItems:
    handler: ./handlers/deleteZZItems.main
    events:
      - schedule:
          rate: rate(6 hours)
    timeout: 180

  insertNotification:
    handler: ./handlers/insertNotification.main
    timeout: 180

resources:
  Resources:
    IamRoleCustomResourcesLambdaExecution:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: sts:AssumeRole
              Principal:
                Service: lambda.amazonaws.com
        Policies:
          - PolicyName: CustomResourcePolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - iam:CreateRole
                    - iam:TagResource
                  Resource: "*"
