
service: elasticsearch-config

plugins:
  - serverless-bundle
  - serverless-dotenv-plugin
  - serverless-plugin-scripts

custom:
  stage: ${opt:stage, self:provider.stage}
  elasticSearchDomainEndpoint: ${cf:elasticsearch-${self:custom.stage}.ElasticSearchDomainEndpoint}
  elasticSearchDomainArn: ${cf:elasticsearch-${self:custom.stage}.ElasticSearchDomainArn}
  iamPath: ${env:IAM_PATH, "/"}

  scripts:
    hooks:
      # Create and configure indices
      deploy:finalize: |
        serverless invoke --stage ${self:custom.stage} --function createAmendmentsIndex
        serverless invoke --stage ${self:custom.stage} --function createAmendmentsMapping

provider:
  name: aws
  runtime: nodejs12.x

package:
  individually: true

functions:
  createAmendmentsIndex:
    handler: createIndex.handler
    role: LambdaEsConfigRole
    environment:
      ES_ENDPOINT: ${self:custom.elasticSearchDomainEndpoint}
      INDEX: amendments
    maximumRetryAttempts: 2
  createAmendmentsMapping:
    handler: createMapping.amendmentsHandler
    role: LambdaEsConfigRole
    environment:
      ES_ENDPOINT: ${self:custom.elasticSearchDomainEndpoint}
      INDEX: amendments
    package:
      include:
        - ./mappings/amendments.json
    maximumRetryAttempts: 2

resources:
  Conditions:
    CreatePermissionsBoundary:
      Fn::Not:
        - Fn::Equals:
          - ""
          - ${env:IAM_PERMISSIONS_BOUNDARY_POLICY, ""}
  Resources:
    LambdaEsConfigRole:
      Type: 'AWS::IAM::Role'
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
        Path: ${self:custom.iamPath}
        PermissionsBoundary:
          Fn::If:
            - CreatePermissionsBoundary
            - Fn::Join:
              - ''
              -
                - 'arn:aws:iam::'
                - Ref: AWS::AccountId
                - ':policy'
                - '${env:IAM_PERMISSIONS_BOUNDARY_POLICY, ""}'
            - Ref: AWS::NoValue
        Policies:
          - PolicyName: 'LambdaRolePolicy'
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: 'Allow'
                Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
                Resource: 'arn:aws:logs:*:*:*'
              - Effect: 'Allow'
                Action:
                - es:ESHttp*
                Resource: ${self:custom.elasticSearchDomainArn}/*
