service: email

frameworkVersion: "3"

useDotenv: true

package:
  individually: true

plugins:
  - serverless-esbuild
  - serverless-dotenv-plugin
  - serverless-s3-bucket-helper
  - serverless-offline
custom:
  stage: ${opt:stage, self:provider.stage}
  iamPath: ${ssm:/configuration/${self:custom.stage}/iam/path, ssm:/configuration/default/iam/path}
  iamPermissionsBoundaryPolicy: ${ssm:/configuration/${self:custom.stage}/iam/permissionsBoundaryPolicy, ssm:/configuration/default/iam/permissionsBoundaryPolicy, ""}
  oneMacTableName: ${cf:app-api-${self:custom.stage}.OneMacTableName, ""}
  oneMacTableArn: ${cf:app-api-${self:custom.stage}.OneMacTableArn, ""}
  emailTopic: ${cf:app-api-${self:custom.stage}.EmailTopic, ""}
  emailEventTopic: ${cf:app-api-${self:custom.stage}.EmailEventTopic, ""}

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  stage: dev
  timeout: 600
  iam:
    role:
      path: ${self:custom.iamPath}
      permissionsBoundary: !Sub 'arn:aws:iam::${AWS::AccountId}:policy${self:custom.iamPermissionsBoundaryPolicy, ""}'

functions:
  processEmails:
    handler: handlers/processEmails.main
    events:
      - sns: ${self:custom.emailTopic}

  processEmailEvents:
    handler: handlers/processEmailEvents.main
    events:
      - sns: ${self:custom.emailEventTopic}

resources:
  Resources:
    EmailSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn: ${self:custom.emailTopic}
        Endpoint: !GetAtt ProcessEmailsLambdaFunction.Arn
        Protocol: lambda

    EmailEventConfigurationSet:
      Type: AWS::SES::ConfigurationSet
      Properties:
        Name: 'email-${self:custom.stage}'

    EmailEventConfigurationSetEventDestination:
      Type: AWS::SES::ConfigurationSetEventDestination
      Properties:
        ConfigurationSetName: !Ref EmailEventConfigurationSet
        EventDestination: 
          Enabled: true
          Name: 'email-${self:custom.stage}'
          MatchingEventTypes:
            - "send"
            - "reject"
            - "bounce"
            - "complaint"
            - "delivery"
            - "open"
            - "click"
            - "renderingFailure"
            - "deliveryDelay"
            - "subscription"
          SnsDestination: 
            TopicARN: ${self:custom.emailEventTopic}


