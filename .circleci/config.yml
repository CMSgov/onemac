version: 2.0

ignore_branches_that_begin_with_skipci: &ignore_branches_that_begin_with_skipci
  filters:
    branches:
      ignore:
        - /^skipci.*/ # Ignore any branch that begin with skipci

jobs:
  verify_branch:
    docker:
      - image: circleci/node:12
        environment:
          TERM: xterm
    steps:
      - run:
          name: Check branch name is a legal serverless stage name
          command: |
            if [[ ! $CIRCLE_BRANCH =~ ^[a-zA-Z0-9-]*$ ]] || [[ ${#CIRCLE_BRANCH} -gt 128 ]]; then
              echo """
                ------------------------------------------------------------------------------------------------------------------------------
                ERROR:  Please read below
                ------------------------------------------------------------------------------------------------------------------------------
                Bad branch name detected; cannot continue.

                The Serverless Application Framework has a concept of stages that facilitate multiple deployments of the same service.
                In this setup, the git branch name gets passed to Serverless to serve as the stage name.
                The stage name (branch name in this case) is tacked onto the end of the service name by Serverless.
                Therefore, the branch name must be a valid service name.

                From Serverless:
                  A service name should only contain alphanumeric (case sensitive) and hyphens. It should start with an alphabetic character and shouldnt exceed 128 characters.

                For CircleCI support, please push your code to a new branch with a name that meets Serverless' service name requirements.
                So, make a new branch with a name that is made up of only letters, numbers, and hyphens... then delete this branch.
                ------------------------------------------------------------------------------------------------------------------------------
              """
              exit 1
            fi
  lock:
    docker:
      - image: circleci/node:12
        environment:
          TERM: xterm
    steps:
      - checkout
      - run:
          name: lock this branch to prevent concurrent builds
          command: |
            ./.circleci/circle-lock.sh --branch $CIRCLE_BRANCH
  deploy:
    docker:
      - image: circleci/node:12
        environment:
          TERM: xterm
    steps:
      - checkout
      - run:
          name: set environment for deploy
          command: |
            # Environment variable names cannot contain hyphens
            # So here we take the branch name, swap hyphens for underscores, and set variables if they exist.
            echo "export ROUTE_53_HOSTED_ZONE_ID=\$${CIRCLE_BRANCH//-/_}_ROUTE_53_HOSTED_ZONE_ID" >> $BASH_ENV
            echo "export ROUTE_53_DOMAIN_NAME=\$${CIRCLE_BRANCH//-/_}_ROUTE_53_DOMAIN_NAME" >> $BASH_ENV
            echo "export CLOUDFRONT_CERTIFICATE_ARN=\$${CIRCLE_BRANCH//-/_}_CLOUDFRONT_CERTIFICATE_ARN" >> $BASH_ENV
            echo "export CLOUDFRONT_DOMAIN_NAME=\$${CIRCLE_BRANCH//-/_}_CLOUDFRONT_DOMAIN_NAME" >> $BASH_ENV
            echo "export INFRASTRUCTURE_TYPE=\$${CIRCLE_BRANCH//-/_}_INFRASTRUCTURE_TYPE" >> $BASH_ENV
      - run: sudo npm install -g serverless
      - run:
          name: deploy
          no_output_timeout: 30m
          command: |
            # When deploying multiple copies of this quickstart to the same AWS Account (not ideal), a prefix helps prevent stepping on each other.
            # This can optionally be set as an environment variable in the CircleCI Project Settings
            ./deploy.sh $STAGE_PREFIX$CIRCLE_BRANCH
      - run:
          name: Print the application endpoint
          command: |
            cd services
            ./output.sh ui CloudFrontEndpointUrl $STAGE_PREFIX$CIRCLE_BRANCH
  test:
    docker:
      - image: circleci/node:12-browsers
        environment:
          TERM: xterm
    steps:
      - checkout
      - run:
          name: Run TestCafe suite
          command: |
            sudo npm install -g testcafe serverless
            pushd services
            export APPLICATION_ENDPOINT=`./output.sh ui CloudFrontEndpointUrl $STAGE_PREFIX$CIRCLE_BRANCH`
            popd
            ./test.sh
      - store_artifacts:
          path: tests/testcafe/testcafe_results

workflows:
  version: 2
  deploy:
    jobs:
      - verify_branch:
          <<: *ignore_branches_that_begin_with_skipci
      - lock:
          requires:
            - verify_branch
          <<: *ignore_branches_that_begin_with_skipci
      - deploy:
          requires:
            - lock
          <<: *ignore_branches_that_begin_with_skipci
      - test:
          requires:
            - deploy
          <<: *ignore_branches_that_begin_with_skipci
