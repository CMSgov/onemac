version: 2.0

master_and_cci_only: &master_and_cci_only
  filters:
    branches:
      only:
        - master
        - /^cci-[a-zA-Z0-9-]*$/ # Branch begins with cci- and only contains letters, numbers, and hyphens

jobs:
  lock:
    docker:
      - image: circleci/node:12
        environment:
          TERM: xterm
    steps:
      - checkout
      - run:
          name: lock this branch to prevent concurrent builds
          command: |
            ./.circleci/circle-lock.sh --branch $CIRCLE_BRANCH
  deploy:
    docker:
      - image: circleci/node:12
        environment:
          TERM: xterm
    steps:
      - checkout
      - run:
          name: set environment for deploy
          command: |
            # Environment variable names cannot contain hyphens
            # So here we take the branch name, swap hyphens for underscores, and set variables if they exist.
            echo "export ROUTE_53_HOSTED_ZONE_ID=\$${CIRCLE_BRANCH//-/_}_ROUTE_53_HOSTED_ZONE_ID" >> $BASH_ENV
            echo "export ROUTE_53_DOMAIN_NAME=\$${CIRCLE_BRANCH//-/_}_ROUTE_53_DOMAIN_NAME" >> $BASH_ENV
            echo "export CLOUDFRONT_CERTIFICATE_ARN=\$${CIRCLE_BRANCH//-/_}_CLOUDFRONT_CERTIFICATE_ARN" >> $BASH_ENV
            echo "export CLOUDFRONT_DOMAIN_NAME=\$${CIRCLE_BRANCH//-/_}_CLOUDFRONT_DOMAIN_NAME" >> $BASH_ENV
            echo "export INFRASTRUCTURE_TYPE=\$${CIRCLE_BRANCH//-/_}_INFRASTRUCTURE_TYPE" >> $BASH_ENV
      - run: sudo npm install -g serverless
      - run:
          name: deploy
          no_output_timeout: 30m
          command: |
            # When deploying multiple copies of this quickstart to the same AWS Account (not ideal), a prefix helps prevent stepping on each other.
            # This can optionally be set as an environment variable in the CircleCI Project Settings
            ./deploy.sh $STAGE_PREFIX$CIRCLE_BRANCH
      - run:
          name: Print the application endpoint
          command: |
            cd services
            ./output.sh ui CloudFrontEndpointUrl $STAGE_PREFIX$CIRCLE_BRANCH
  test:
    docker:
      - image: circleci/node:12-browsers
        environment:
          TERM: xterm
    steps:
      - checkout
      - run:
          name: Run TestCafe suite
          command: |
            sudo npm install -g testcafe serverless
            pushd services
            export APPLICATION_ENDPOINT=`./output.sh ui CloudFrontEndpointUrl $STAGE_PREFIX$CIRCLE_BRANCH`
            popd
            ./test.sh
      - store_artifacts:
          path: tests/testcafe/testcafe_results

workflows:
  version: 2
  deploy:
    jobs:
      - lock:
          <<: *master_and_cci_only
      - deploy:
          requires:
            - lock
          <<: *master_and_cci_only
      - test:
          requires:
            - deploy
          <<: *master_and_cci_only
